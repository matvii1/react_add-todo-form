{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","index","classNames","completed","title","TodoList","newTodos","map","id","username","getUser","userId","usersFromServer","find","initialTodos","todosId","App","useState","selectId","setSelectId","inputTitle","setInputTitle","todos","showUserError","setShowUserError","showTitleError","setShowTitleError","handleOnSubmit","event","preventDefault","newTodo","Math","max","push","getTodo","action","method","onSubmit","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a319def.chunk.js","sourcesContent":["import { User } from '../../types/Types';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo = ({ user }: Props) => (\n  <a className=\"UserInfo\" href={user.email}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Types';\n\ntype Props = {\n  todo: Todo,\n  index: number,\n};\n\nexport const TodoInfo = ({ todo, index }: Props) => {\n  return (\n    <article\n      data-id={index}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  newTodos: Todo[],\n};\n\nexport const TodoList = ({ newTodos }: Props) => {\n  return (\n    <>\n      <section className=\"TodoList\">\n        {newTodos.map((todo: Todo, index: number) => {\n          return (\n            <TodoInfo\n              todo={todo}\n              index={index + 1}\n            />\n          );\n        })}\n      </section>\n    </>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo, User } from './types/Types';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst todosId = initialTodos\n  .map(todo => todo.id);\n\nexport const App = () => {\n  const [selectId, setSelectId] = useState('');\n  const [inputTitle, setInputTitle] = useState('');\n  const [todos] = useState(initialTodos);\n  const [showUserError, setShowUserError] = useState(false);\n  const [showTitleError, setShowTitleError] = useState(false);\n\n  const getTodo = (): void => {\n    const newTodo: Todo = {\n      id: Math.max(...todosId) + 1,\n      title: inputTitle,\n      userId: +selectId,\n      completed: false,\n      user: getUser(+selectId),\n    };\n\n    todos.push(newTodo);\n  };\n\n  const handleOnSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setShowUserError(!selectId);\n    setShowTitleError(!inputTitle);\n\n    if (selectId && inputTitle) {\n      getTodo();\n      setInputTitle('');\n      setSelectId('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={event => {\n          handleOnSubmit(event);\n        }}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={inputTitle}\n              onChange={(event) => setInputTitle(event.target.value)}\n            />\n          </label>\n          {showTitleError\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              value={selectId}\n              onChange={(event) => setSelectId(event.target.value)}\n            >\n              <option\n                value=\"\"\n                disabled\n              >\n                Choose a user\n              </option>\n\n              {usersFromServer.map(({ name, id }) => (\n                <option\n                  value={id}\n                  key={id}\n                >\n                  {name}\n                </option>\n              ))}\n\n            </select>\n          </label>\n\n          {showUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList newTodos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}